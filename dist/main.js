!(function (e) { const t = {}; function n(r) { if (t[r]) return t[r].exports; const o = t[r] = { i: r, l: !1, exports: {} }; return e[r].call(o.exports, o, o.exports, n), o.l = !0, o.exports; }n.m = e, n.c = t, n.d = function (e, t, r) { n.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: r }); }, n.r = function (e) { typeof Symbol !== 'undefined' && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, { value: 'Module' }), Object.defineProperty(e, '__esModule', { value: !0 }); }, n.t = function (e, t) { if (1 & t && (e = n(e)), 8 & t) return e; if (4 & t && typeof e === 'object' && e && e.__esModule) return e; const r = Object.create(null); if (n.r(r), Object.defineProperty(r, 'default', { enumerable: !0, value: e }), 2 & t && typeof e !== 'string') for (const o in e)n.d(r, o, ((t) => e[t]).bind(null, o)); return r; }, n.n = function (e) { const t = e && e.__esModule ? function () { return e.default; } : function () { return e; }; return n.d(t, 'a', t), t; }, n.o = function (e, t) { return Object.prototype.hasOwnProperty.call(e, t); }, n.p = '', n(n.s = 4); }([function (e, t, n) { const r = n(1); let o = n(2); typeof (o = o.__esModule ? o.default : o) === 'string' && (o = [[e.i, o, '']]); const a = { insert: 'head', singleton: !1 }; r(o, a); e.exports = o.locals || {}; }, function (e, t, n) {
  let r; const o = function () { return void 0 === r && (r = Boolean(window && document && document.all && !window.atob)), r; }; const a = (function () { const e = {}; return function (t) { if (void 0 === e[t]) { let n = document.querySelector(t); if (window.HTMLIFrameElement && n instanceof window.HTMLIFrameElement) try { n = n.contentDocument.head; } catch (e) { n = null; }e[t] = n; } return e[t]; }; }()); const i = []; function c(e) { for (var t = -1, n = 0; n < i.length; n++) if (i[n].identifier === e) { t = n; break; } return t; } function s(e, t) { for (var n = {}, r = [], o = 0; o < e.length; o++) { const a = e[o]; const s = t.base ? a[0] + t.base : a[0]; const l = n[s] || 0; const u = ''.concat(s, ' ').concat(l); n[s] = l + 1; const d = c(u); const p = { css: a[1], media: a[2], sourceMap: a[3] }; d !== -1 ? (i[d].references++, i[d].updater(p)) : i.push({ identifier: u, updater: v(p, t), references: 1 }), r.push(u); } return r; } function l(e) { const t = document.createElement('style'); const r = e.attributes || {}; if (void 0 === r.nonce) { const o = n.nc; o && (r.nonce = o); } if (Object.keys(r).forEach(((e) => { t.setAttribute(e, r[e]); })), typeof e.insert === 'function')e.insert(t); else { const i = a(e.insert || 'head'); if (!i) throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid."); i.appendChild(t); } return t; } let u; const d = (u = [], function (e, t) { return u[e] = t, u.filter(Boolean).join('\n'); }); function p(e, t, n, r) { const o = n ? '' : r.media ? '@media '.concat(r.media, ' {').concat(r.css, '}') : r.css; if (e.styleSheet)e.styleSheet.cssText = d(t, o); else { const a = document.createTextNode(o); const i = e.childNodes; i[t] && e.removeChild(i[t]), i.length ? e.insertBefore(a, i[t]) : e.appendChild(a); } } function f(e, t, n) { let r = n.css; const o = n.media; const a = n.sourceMap; if (o ? e.setAttribute('media', o) : e.removeAttribute('media'), a && btoa && (r += '\n/*# sourceMappingURL=data:application/json;base64,'.concat(btoa(unescape(encodeURIComponent(JSON.stringify(a)))), ' */')), e.styleSheet)e.styleSheet.cssText = r; else { for (;e.firstChild;)e.removeChild(e.firstChild); e.appendChild(document.createTextNode(r)); } } let m = null; let y = 0; function v(e, t) { let n; let r; let o; if (t.singleton) { const a = y++; n = m || (m = l(t)), r = p.bind(null, n, a, !1), o = p.bind(null, n, a, !0); } else n = l(t), r = f.bind(null, n, t), o = function () { !(function (e) { if (e.parentNode === null) return !1; e.parentNode.removeChild(e); }(n)); }; return r(e), function (t) { if (t) { if (t.css === e.css && t.media === e.media && t.sourceMap === e.sourceMap) return; r(e = t); } else o(); }; }e.exports = function (e, t) { (t = t || {}).singleton || typeof t.singleton === 'boolean' || (t.singleton = o()); let n = s(e = e || [], t); return function (e) { if (e = e || [], Object.prototype.toString.call(e) === '[object Array]') { for (let r = 0; r < n.length; r++) { const o = c(n[r]); i[o].references--; } for (var a = s(e, t), l = 0; l < n.length; l++) { const u = c(n[l]); i[u].references === 0 && (i[u].updater(), i.splice(u, 1)); }n = a; } }; };
}, function (e, t, n) { (t = n(3)(!1)).push([e.i, 'main{position:relative}.position{border:solid 1px goldenrod}.position:not(:empty){cursor:not-allowed}.board-wrapper{display:grid;grid-template-rows:1fr 1fr 1fr;grid-template-columns:1fr 1fr 1fr;height:400px;width:400px;font-size:4.2em;text-align:center;border:solid 2px goldenrod}.hidden{display:none}.reset-game{position:absolute;height:100vh;width:100%;z-index:5;background-color:rgba(0,0,0,0.623)}.declare-winner{position:absolute;top:40%;left:50%;transform:translate(-50%);color:white}.rst-game-button{position:absolute;top:50%;left:50%;transform:translate(-50%)}#data1{margin:15px;padding:25px;width:min-content}#data2{margin:15px;padding:25px;width:min-content}.inactive-player{border:3px solid gray}.active-player{border:3px solid greenyellow}\n', '']), e.exports = t; }, function (e, t, n) {
  e.exports = function (e) { const t = []; return t.toString = function () { return this.map(((t) => { const n = (function (e, t) { const n = e[1] || ''; const r = e[3]; if (!r) return n; if (t && typeof btoa === 'function') { const o = (i = r, c = btoa(unescape(encodeURIComponent(JSON.stringify(i)))), s = 'sourceMappingURL=data:application/json;charset=utf-8;base64,'.concat(c), '/*# '.concat(s, ' */')); const a = r.sources.map(((e) => '/*# sourceURL='.concat(r.sourceRoot || '').concat(e, ' */'))); return [n].concat(a).concat([o]).join('\n'); } let i; let c; let s; return [n].join('\n'); }(t, e)); return t[2] ? '@media '.concat(t[2], ' {').concat(n, '}') : n; })).join(''); }, t.i = function (e, n, r) { typeof e === 'string' && (e = [[null, e, '']]); const o = {}; if (r) for (let a = 0; a < this.length; a++) { const i = this[a][0]; i != null && (o[i] = !0); } for (let c = 0; c < e.length; c++) { const s = [].concat(e[c]); r && o[s[0]] || (n && (s[2] ? s[2] = ''.concat(n, ' and ').concat(s[2]) : s[2] = n), t.push(s)); } }, t; };
}, function (e, t, n) {
  n.r(t); n(0); const r = (() => {
    const e = document.querySelector('#data1'); const t = document.querySelector('#data2'); const n = document.querySelector('#start'); const o = document.querySelector('.reset-game'); const a = document.querySelector('.rst-game-button'); const i = document.querySelector('.declare-winner'); const c = document.querySelectorAll('.position'); const s = document.querySelector('.form'); const l = document.querySelector('.board-wrapper'); const u = document.querySelector('.data'); const d = document.querySelector('#data1'); const p = document.querySelector('#data2'); const f = e => { const { player1: t } = e; const { player2: n } = e; s.classList.add('hidden'), u.classList.remove('hidden'), d.querySelector('.name').innerText = t.name, d.querySelector('.score').innerText = t.wins, p.querySelector('.name').innerText = n.name, p.querySelector('.score').innerText = n.wins; }; return {
      cells: c, board: l, updateNames: () => ({ name1: document.querySelector('#player1').value, name2: document.querySelector('#player2').value }), displayPlayers: f, updateWins: e => { e.symbol === 'X' ? d.querySelector('.score').innerText = e.wins : p.querySelector('.score').innerText = e.wins; }, startBtn: n, player1Info: e, player2Info: t, resetDiv: o, declareWinner: i, resetBtn: a, changePlayerTurn: () => { e.classList.toggle('active-player'), t.classList.toggle('active-player'), e.classList.toggle('inactive-player'), t.classList.toggle('inactive-player'); }, clearCells: () => { c.forEach(e => { e.innerText = ''; }); }, hideReset: () => { o.classList.add('hidden'); }, showReset: () => { o.classList.remove('hidden'); }, displayTie: () => { r.declareWinner.innerHTML = 'Game is a tie'; }, displayWinner: e => { r.declareWinner.innerHTML = `${e.name} Wins the game`; }, setReset: e => { a.addEventListener('click', e, !1); }, setGameStart: e => { n.addEventListener('click', e, !1); }, initializeScreen: (e, t) => { f(e), l.classList.remove('hidden'), c.forEach(e => { e.addEventListener('click', t, !1); }); },
    };
  })(); const o = r; const a = (e, t) => { let n; n = e === '' ? 'Player' : e; return { name: n, symbol: t, wins: 0 }; }; const i = { WINS: [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [6, 4, 2]] }; const c = (() => { let e = !0; let t = {}; let n = 9; const r = () => { o.clearCells(), o.hideReset(), e || (e = !0, o.changePlayerTurn()), n = 9; }; const c = e => { e ? (o.showReset(), o.displayWinner(e), e.wins += 1, o.updateWins(e)) : (o.showReset(), o.displayTie()); }; const s = e => i.WINS.some(t => t.every(t => o.cells[t].textContent === e)); const l = a => { const i = a.target; const l = e ? t.player1 : t.player2; i.textContent === '' && (i.innerHTML = l.symbol, n -= 1, (e => { s(e.symbol) && (o.setReset(r), c(e)); })(l), (e => { n !== 0 || s(e.symbol) || (o.setReset(r), c()); })(l), e = !e, o.changePlayerTurn()); }; return { startGame: () => { (e => { const n = a(e.name1, 'X'); const r = a(e.name2, 'O'); t = { player1: n, player2: r }; })(o.updateNames()), o.initializeScreen(t, l); } }; })(); o.setGameStart(c.startGame);
}]));